/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/reset.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&led_strip { chain-length = <27>; };

&lt {
    tapping-term-ms = <135>;
    quick-tap-ms = <135>;
};

/ {
    macros {
        win_term: win_term {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(R) &kp W &kp T>;
            label = "WIN_TERM";
        };

        prev_tab: prev_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(TAB))>;
            label = "PREV_TAB";
        };

        next_tab: next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(TAB)>;
            label = "NEXT_TAB";
        };

        CtrlShiftV: CtrlShiftV {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(V))>;
            label = "CTRLSHIFTV";
        };

        CtrlAltDel: CtrlAltDel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(DEL))>;
            label = "CTRLALTDEL";
        };

        SuperL: SuperL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>;
            label = "SUPERL";
        };

        wzt: wzt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(R) &kp W &kp Z &kp T>;
            label = "WZT";
        };

        AltF4: AltF4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "ALTF4";
        };

        AltTab: AltTab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB)>;
            label = "ALTTAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "DEF";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R    &kp T          &kp Y    &kp U     &kp I      &kp O    &kp P     &mo 2
&kp LSHFT  &kp A  &kp S  &kp D     &kp F    &kp G          &kp H    &kp J     &kp K      &kp L    &kp SEMI  &kp LSHFT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V    &kp B          &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                         &kp LALT  &kp ESC  &lt 1 SPACE    &kp RET  &kp BSPC  &kp RALT
            >;
        };

        NAVS {
            display-name = "NAV";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&AltF4  &prev_tab  &kp F2        &next_tab  &win_term       &wzt            &kp LEFT      &kp DOWN   &kp UP     &kp RIGHT  &kp K_CONTEXT_MENU  &trans
&trans  &kp TAB    &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &kp LEFT_GUI    &kp RGUI      &kp RSHFT  &kp RCTRL  &kp RALT   &kp GRAVE           &trans
&trans  &trans     &trans        &trans     &CtrlShiftV     &trans          &kp LS(HOME)  &kp HOME   &kp DEL    &kp END    &kp LS(END)         &trans
                                 &trans     &trans          &none           &trans        &kp BSPC   &trans
            >;
        };

        NUMS {
            display-name = "NUM";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH          &kp EQUAL      &kp RGUI          &trans  &trans         &trans
&kp TAB    &kp N4  &kp N5  &kp N6      &kp LBKT              &kp RBKT                 &kp MINUS              &kp LESS_THAN  &kp GREATER_THAN  &trans  &kp BACKSPACE  &trans
&kp LCTRL  &kp N7  &kp N8  &kp N9      &kp DOT               &kp EQUAL                &kp BACKSPACE          &trans         &trans            &trans  &trans         &trans
                           &kp PERIOD  &kp NUMBER_0          &kp SPACE                &mt RIGHT_SHIFT ENTER  &trans         &trans
            >;
        };

        FUNCS {
            bindings = <
&kp F1       &kp F2   &kp F3    &kp F4     &kp F5     &kp F6      &kp F7    &kp F8      &kp F9      &kp F10   &kp F11  &kp F12
&SuperL      &kp TAB  &kp LALT  &kp LCTRL  &kp LSHFT  &kp LGUI    &kp RGUI  &kp RSHFT   &kp RCTRL   &kp RALT  &trans   &to 4
&CtrlAltDel  &trans   &trans    &trans     &trans     &trans      &trans    &bt BT_PRV  &bt BT_NXT  &trans    &trans   &bt BT_CLR
                                &trans     &trans     &trans      &trans    &trans      &trans
            >;
        };

        GAMING_L {
            display-name = "GAML";
            bindings = <
&kp LEFT_ALT  &kp Q  &kp W  &kp E  &kp R      &kp T           &kp Y    &kp U     &kp I      &kp O    &kp P     &studio_unlock
&kp LSHFT     &kp A  &kp S  &kp D  &kp F      &kp G           &kp H    &kp J     &kp K      &kp L    &kp SEMI  &to 0
&kp LCTRL     &kp Z  &kp X  &kp C  &kp V      &kp B           &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                            &mo 2  &kp SPACE  &lt 4 ESCAPE    &kp RET  &kp BSPC  &kp RALT
            >;
        };

        GAMING_R {
            display-name = "GAMR";
            bindings = <
&trans  &kp Y  &kp U  &kp I      &kp O    &kp P       &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans
&trans  &kp H  &kp J  &kp K      &kp L    &kp SEMI    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &to 0
&trans  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH    &trans  &trans  &trans  &trans  &trans  &AltTab
                      &trans     &trans   &trans      &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        IntoFuncs {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };
};
